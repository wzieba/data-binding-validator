apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

ext.androidXVersion = '1.0.0'
ext.apacheCommonsValidatorsVersion = '1.4.0'
ext.threeTenAbpVersion = '1.1.0'
ext.robolectricVersion = '4.0-beta-1'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    dataBinding {
        enabled true
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 3
        versionName "1.0.0"
        consumerProguardFiles 'proguard-rules.pro'
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:$androidXVersion"
    implementation "commons-validator:commons-validator:$apacheCommonsValidatorsVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "com.jakewharton.threetenabp:threetenabp:$threeTenAbpVersion"
    api "com.google.android.material:material:$androidXVersion"
    testImplementation 'junit:junit:4.12'
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
repositories {
    mavenCentral()
}

// uncomment to build a jar file in addition to the default aar file
//android.libraryVariants.all { variant ->
//    def name = variant.buildType.name
//    def task = project.tasks.create "jar${name.capitalize()}", Jar
//    task.dependsOn variant.javaCompile
//    task.from variant.javaCompile.destinationDir
//    artifacts.add('archives', task);